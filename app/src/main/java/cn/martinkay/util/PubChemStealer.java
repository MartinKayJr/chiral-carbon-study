package cn.martinkay.util;

import org.jetbrains.annotations.NotNull;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Random;

import cn.martinkay.chiral.MdlMolParser;
import cn.martinkay.chiral.Molecule;

public class PubChemStealer {

    private static final String PUB_CHEM_SITE = "https://pubchem.ncbi.nlm.nih.gov";
    private static final String FAKE_PUB_CHEM_SITE = "https://ccc.zhenxin.me";//reserved proxy...

    @NotNull
    public static Molecule nextRandomMolecule() {
        Random r = new Random();
        for (int retry = 5; retry > 0; retry--) {
            long cid = (long) (r.nextDouble() * 100000000 + r.nextDouble() * 10000000 + r.nextDouble() * 100000 + 100000);
            try {
                return getMoleculeByCid(cid);
            } catch (IOException e) {
                e.printStackTrace();
                retry--;
            } catch (Exception ignored) {
                ignored.printStackTrace();
            }
        }
        return null;
    }

    public static Molecule getMoleculeByCid(long cid) throws IOException, MdlMolParser.BadMolFormatException {
//        HttpURLConnection conn = (HttpURLConnection) new URL(FAKE_PUB_CHEM_SITE + "/rest/pug/compound/CID/" + cid + "/record/SDF/?record_type=2d&response_type=display").openConnection();
//        conn.setRequestMethod("GET");
//        conn.setConnectTimeout(10000);
//        conn.setReadTimeout(10000);
//        if (conn.getResponseCode() != 200) {
//            conn.disconnect();
//            throw new IOException("Bad ResponseCode: " + conn.getResponseCode());
//        }
//        InputStream in = conn.getInputStream();
//        ByteArrayOutputStream outStream = new ByteArrayOutputStream();
//        byte[] buffer = new byte[1024];
//        int len;
//        while ((len = in.read(buffer)) != -1) {
//            outStream.write(buffer, 0, len);
//        }
//        in.close();
//        conn.disconnect();
//        String str = outStream.toString();
        // 获取assets中的test.mol
//        InputStream in = PubChemStealer.class.getClassLoader().getResourceAsStream("test.mol");
//
//        ByteArrayOutputStream outStream = new ByteArrayOutputStream();
//        byte[] buffer = new byte[1024];
//        int len;
//        while ((len = in.read(buffer)) != -1) {
//            outStream.write(buffer, 0, len);
//        }
//        in.close();
//        String str = outStream.toString();
        String str = "\n" +
                "Generated by Molecular Materials Informatics\n" +
                "\n" +
                " 27 31  0  0  0  0  0  0  0  0999 V2000\n" +
                "   -0.5116   -0.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -0.5116    1.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    0.7875   -0.8316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -1.8106   -0.8316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    0.7875   -2.3316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -1.8106   -2.3316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -1.8106    2.1684    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    0.7875    2.1684    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    2.0865    1.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    2.0865   -0.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -3.1096    1.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -3.1096   -0.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -0.5116   -3.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -4.4087   -2.3316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -4.4087   -0.8316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -5.7077   -0.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -5.7077   -3.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -7.0068   -0.8316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -7.0068   -2.3316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -8.3058   -3.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -9.6048   -2.3316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -9.6048   -0.8316    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -8.3058   -0.0816    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -8.3058    1.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -5.7077    1.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "   -7.0068    2.1684    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "    3.3855   -0.8316    0.0000 Cl  0  0  0  0  0  0  0  0  0  0  0  0\n" +
                "  1  2  1  0  0  0  0\n" +
                "  1  3  1  0  0  0  0\n" +
                "  1  4  1  0  0  0  0\n" +
                "  3  5  1  0  0  0  0\n" +
                "  4  6  1  0  0  0  0\n" +
                "  2  7  1  0  0  0  0\n" +
                "  2  8  1  0  0  0  0\n" +
                "  8  9  1  0  0  0  0\n" +
                "  9 10  1  0  0  0  0\n" +
                "  3 10  1  0  0  0  0\n" +
                "  7 11  1  0  0  0  0\n" +
                " 11 12  1  0  0  0  0\n" +
                " 12  4  1  0  0  0  0\n" +
                "  6 13  1  0  0  0  0\n" +
                " 13  5  1  0  0  0  0\n" +
                " 14 15  1  0  0  0  0\n" +
                " 15 16  1  0  0  0  0\n" +
                " 14 17  1  0  0  0  0\n" +
                " 16 18  1  0  0  0  0\n" +
                " 17 19  1  0  0  0  0\n" +
                " 19 18  1  0  0  0  0\n" +
                " 19 20  1  0  0  0  0\n" +
                " 20 21  1  0  0  0  0\n" +
                " 21 22  1  0  0  0  0\n" +
                " 22 23  1  0  0  0  0\n" +
                " 23 18  1  0  0  0  0\n" +
                " 23 24  1  0  0  0  0\n" +
                " 16 25  1  0  0  0  0\n" +
                " 24 26  1  0  0  0  0\n" +
                " 25 26  1  0  0  0  0\n" +
                " 10 27  1  0  0  0  0\n" +
                "M  END\n";
        return MdlMolParser.parseString(str);
    }
}
